suppressWarnings(suppressMessages(library(dplyr)))
library(dplyr)
dataset_filtrat <- dataset %>%
filter(Critic_Score_Class %in% c('Excelente', 'Bueno'))
y <- factor(dataset_filtrat$Critic_Score_Class, levels = c("Bueno", "Excelente"), labels = c(0, 1))
options(warn=-1)
#Variable explicada (S'ha d'expressar com un nombre binari)
#Variables explicatives: Global_Sales, Genre
x1 <- dataset_filtrat$Global_Sales
x2 <- dataset_filtrat$Genre
model_log <- glm(y~x1+x2, family='binomial')
options(warn=-1)
ANOVA_model <- anova(model_log, test ='Chisq')
output_model <- capture.output(ANOVA_model)
output <- output_model[5:15]
output
resultat <- summary(model_log)
output_model <- capture.output(resultat)
output <- output_model[8:19]
output
par(mfrow = c(2, 2))
plot(model_log)
confint.default(model_log)
#Noves observacions creades manualment
ventes_globals <- 1.5
nous_generes<- c("Role-Playing", "Racing", "Puzzle")
observacio <- data.frame(x1=ventes_globals, x2=nous_generes)
#Predicció amb les noves observacions sobre el model logístic
predict(model_log, observacio)
#Observació 1
1 / (1 + exp(-0.3708266))
#Observació 2
1 / (1 + exp(-0.5269397 ))
#Observació 3
1 / (1 + exp(0.1022854))
y_num <- as.numeric(y)
model_poisson <- glm(y_num~x1+x2, family='poisson')
ANOVA_model <- anova(model_poisson, test ='Chisq')
output_model <- capture.output(ANOVA_model)
output <- output_model[6:15]
output
model_poisson_res <- glm(y_num~x1, family='poisson')
ANOVA_model <- anova(model_poisson_res, test ='Chisq')
output_model <- capture.output(ANOVA_model)
output <- output_model[5:14]
output
resultat <- summary(model_poisson_res)
output_model <- capture.output(resultat)
output <- output_model[5:10]
output
par(mfrow = c(2, 2))
plot(model_poisson_res)
confint.default(model_poisson_res)
update.packages(ask = FALSE, checkBuilt = TRUE)
tinytex::tlmgr_update()
tinytex::reinstall_tinytex()
update.packages(ask = FALSE, checkBuilt = TRUE)
tinytex::tlmgr_update()
options(tinytex.verbose = TRUE)
unlink("C:/Users/garci/Desktop/UNIVERSITAT/ESTADÍSTICA/7304005/Anàlisi de vendes de videojocs_cache", recursive = TRUE)
install.packages('tinytex')
tinytex::install_tinytex()
Y
tinytex::install_tinytex()
y
update.packages(ask = FALSE, checkBuilt = TRUE)
tinytex::tlmgr_update()
tinytex::reinstall_tinytex()
tinytex::is_tinytex()
tinytex::install_tinytex()
y
tinytex::is_tinytex()
tinytex::install_tinytex()
Y
tinytex::install_tinytex()
yes
tinytex::install_tinytex()
n
tinytex::install_tinytex()
y
tinytex::is_tinytex()
tinytex::is_tinytex()
tinytex::install_tinytex()
y
tinytex::is_tinytex()
tinytex::is_tinytex()
tinytex::install_tinytex()
knitr::opts_chunk$set(echo = FALSE)
dataset <- read.csv("dataset_videogames.csv")
head(dataset[,c("Platform", "Genre", "Publisher", "Rating", "Critic_Score_Class")])
install.packages("knitr")
install.packages("knitr")
install.packages("knitr")
install.packages("knitr")
install.packages("knitr")
install.packages("knitr")
install.packages("knitr")
install.packages("kableExtra")
knitr::opts_chunk$set(echo = FALSE)
library(knitr)
library(kableExtra)
dataset <- read.csv("dataset_videogames.csv")
data <- head(dataset[,c("Platform", "Genre", "Publisher", "Rating", "Critic_Score_Class")])
# Imprime la tabla con un tamaño de fuente de 10pt
kable(data, "latex", booktabs = TRUE) %>%
kable_styling(font_size = 10)
library(knitr)
library(kableExtra)
dataset <- read.csv("dataset_videogames.csv")
data <- head(dataset[,c("Platform", "Genre", "Publisher", "Rating", "Critic_Score_Class")])
# Imprime la tabla con un tamaño de fuente de 10pt
kable(data, "latex", booktabs = TRUE) %>%
kable_styling(font_size = 10)
dataset <- read.csv("dataset_videogames.csv")
head(dataset[,c("Platform", "Genre", "Publisher", "Rating", "Critic_Score_Class")])
#dataset <- read.csv("dataset_videogames.csv")
#head(dataset[,c("Platform", "Genre", "Publisher", "Rating", "Critic_Score_Class")])
library(kableExtra)
output <- kable(head(mtcars), "latex", booktabs = TRUE) %>%
kable_styling(font_size = 7)
print(output)
#dataset <- read.csv("dataset_videogames.csv")
#head(dataset[,c("Platform", "Genre", "Publisher", "Rating", "Critic_Score_Class")])
library(kableExtra)
output <- kable(head(dataset[,c("Platform", "Genre", "Publisher", "Rating", "Critic_Score_Class")]), "latex", booktabs = TRUE) %>%
kable_styling(font_size = 7)
print(output)
dataset <- read.csv("dataset_videogames.csv")
#head(dataset[,c("Platform", "Genre", "Publisher", "Rating", "Critic_Score_Class")])
library(kableExtra)
output <- kable(head(dataset[,c("Platform", "Genre", "Publisher", "Rating", "Critic_Score_Class")]), "latex", booktabs = TRUE) %>%
kable_styling(font_size = 7)
print(output)
dataset <- read.csv("dataset_videogames.csv")
head(dataset[,c("Platform", "Genre", "Publisher", "Rating", "Critic_Score_Class")])
dataset_videogames <- read.csv("C:/Users/garci/Desktop/UNIVERSITAT/ESTADÍSTICA/7304005/dataset_videogames.csv")
View(dataset_videogames)
knitr::opts_chunk$set(echo = TRUE)
#Carreguem el dataset trobat en Kaggle i veiem característiques d'aquest
dataset <- read.csv("dataset_videogames.csv")
qf(0.95, 2, 17)
qf(0.95,2,25)
qt(0.95,25)
qt(0.95, 26)
1.705618*sqrt(0.1485)
(241/14)- 0.6572718
(241/14)+0.6572718
qf(0.95, 3, 12)
qf(0.95, 4, 12)
life_expectancy <- read.csv("C:/Users/garci/Desktop/UNIVERSITAT/TERCER DE CARRERA/SEGON SEMESTRE/VISUALITZACIÓ DE DADES/S4/VD-3.datos/life_expectancy.csv")
View(life_expectancy)
life_expectancy
df_filtrat <- df[, "Country", "Year", "Both.sexes"]
df <- life_expectancy
df_filtrat <- df[, "Country", "Year", "Both.sexes"]
df <- life_expectancy
promedios <- df %>%
group_by(Country) %>%
summarise(Promedio = mean(Both.sexes, na.rm = TRUE))
library(dplyr)
library(ggplot2)
install.packages("tidyverse")
library(dplyr)
library(ggplot2)
df <- life_expectancy
promedios <- df %>%
group_by(Country) %>%
summarise(Promedio = mean(Both.sexes, na.rm = TRUE))
top_20 <- promedios %>%
arrange(desc(Promedio)) %>%
ggplot(top_20, aes(x = reorder(Country, Promedio), y = Promedio)) +
geom_bar(stat = "identity", fill = "steelblue") +
coord_flip() +
theme_minimal() +
labs(title = "Top 20 países por promedio de Both.sexes",
x = "País",
y = "Promedio de Both.sexes") +
theme(plot.title = element_text(hjust = 0.5))
top_20 <- promedios %>%
arrange(desc(Promedio)) %>%
ggplot(top_20, aes(x = reorder(Country, Promedio), y = Promedio)) +
geom_bar(stat = "identity", fill = "steelblue") +
coord_flip() +
theme_minimal() +
labs(title = "Top 20 países por promedio de Both.sexes",
x = "País",
y = "Promedio de Both.sexes") +
theme(plot.title = element_text(hjust = 0.5))
df <- life_expectancy
promedios <- df %>%
group_by(Country) %>%
summarise(Promedio = mean(Both.sexes, na.rm = TRUE))
top_20 <- promedios %>%
arrange(desc(Promedio)) %>%
ggplot(top_20, aes(x = reorder(Country, Promedio), y = Promedio)) +
geom_bar(stat = "identity", fill = "steelblue") +
coord_flip() +
theme_minimal() +
labs(title = "Top 20 países por promedio de Both.sexes",
x = "País",
y = "Promedio de Both.sexes") +
theme(plot.title = element_text(hjust = 0.5))
df <- life_expectancy
promedios <- df %>%
group_by(Country) %>%
summarise(Promedio = mean(Both.sexes, na.rm = TRUE))
top_20 <- promedios %>%
arrange(desc(Promedio)) %>%
top_20 <- promedios %>%
arrange(desc(Promedio)) %>%
top_20
df <- life_expectancy
promedios <- df %>%
group_by(Country) %>%
summarise(Promedio = mean(Both.sexes, na.rm = TRUE))
top_20 <- promedios %>%
arrange(desc(Promedio)) %>%
head(20)
top_20
promedios
geom_bar(stat = "identity", fill = "steelblue"
ggplot(top_20, aes(x = reorder(Country, Promedio), y = Promedio)) +
ggplot(top_20, aes(x = reorder(Country, Promedio), y = Promedio)) +
geom_bar(stat = "identity", fill = "steelblue")
ggplot(top_20) + aes(x = Country, y = Promedio)) + geom_bar()
ggplot(top_20) + aes(x = Country, y = Promedio) + geom_bar()
ggplot(top_20) + aes(x = Country, y = Promedio) + geom_bar(stat = "identity", fill = "steelblue")
ggplot(top_20) + aes(x = Country, y = Promedio) + geom_bar(stat = "identity")
ggplot(top_20) + aes(x = reorder(Country, -Promedio), y = Promedio) + geom_bar(stat = "identity")
ggplot(top_20) + aes(x = reorder(Country, -Promedio), y = Promedio) + geom_bar(stat = "identity") + theme(axis.text.x=element_text(angle = 45, hjust = 1))
ggplot(top_20) + aes(x = reorder(Country, -Promedio), y = Promedio) + geom_bar(stat = "identity") + theme(axis.text.x=element_text(angle = 45))
ggplot(top_20) + aes(x = reorder(Country, -Promedio), y = Promedio) + geom_bar(stat = "identity") + theme(axis.text.x=element_text(angle = 45, hjust = 1))
ggplot(top_20) + aes(x = reorder(Country, -Promedio), y = Promedio) + geom_bar(stat = "identity") + theme(axis.text.x=element_text(angle = 45, hjust = 1)) +
label(x="Països", y="EV mitjà")
ggplot(top_20) + aes(x = reorder(Country, -Promedio), y = Promedio) + geom_bar(stat = "identity") + theme(axis.text.x=element_text(angle = 45, hjust = 1)) +
labs(x="Països", y="EV mitjà")
ggplot(top_20) + aes(x = reorder(Country, -Promedio), y = Promedio) + geom_bar(stat = "identity") + theme(axis.text.x=element_text(angle = 45, hjust = 1)) +
labs(x="Països", y="Mean EV")
ggplot(top_20) + aes(x = reorder(Country, -Promedio), y = Promedio, color=Country) + geom_bar(stat = "identity") + theme(axis.text.x=element_text(angle = 45, hjust = 1)) +
labs(x="Països", y="Mean EV")
ggplot(top_20) + aes(x = reorder(Country, -Promedio), y = Promedio,) + geom_bar(stat = "identity", fill="blue") + theme(axis.text.x=element_text(angle = 45, hjust = 1)) +
labs(x="Països", y="Mean EV")
ggplot(top_20) + aes(x = reorder(Country, -Promedio), y = Promedio,) + geom_bar(stat = "identity", fill="blue") + theme(axis.text.x=element_text(angle = 45, hjust = 1)) +
labs(x="Països", y="Mean EV", title="Exercici 1")
ggplot(top_20) + aes(x = reorder(Country, -Promedio), y = Promedio,) + geom_bar(stat = "identity", fill="blue") + theme(axis.text.x=element_text(angle = 45, hjust = 1)) +
labs(x="Països", y="Mean EV", title="Exercici 1: Top 20 països en esperança de vida")
ggplot(top_20) + aes(x = reorder(Country, -Promedio), y = Promedio,) + geom_bar(stat = "identity", fill="blue") + theme(axis.text.x=element_text(angle = 45, hjust = 1), plot.title =element_text(hjust = 0.5)) +
labs(x="Països", y="Mean EV", title="Exercici 1: Top 20 països en esperança de vida")
ggplot(top_20) + aes(x = reorder(Country, -Promedio), y = Promedio,) + geom_bar(stat = "identity", fill="blue") + theme(axis.text.x=element_text(angle = 45, hjust = 1), plot.title =element_text(hjust = 0.5)) +
labs(x="Països", y="Mean EV", title="Exercici 1: Top 20 països en esperança de vida") +  ylim(75, 82)
ggplot(top_20) + aes(x = reorder(Country, -Promedio), y = Promedio,) + geom_bar(stat = "identity", fill="blue") + theme(axis.text.x=element_text(angle = 45, hjust = 1), plot.title =element_text(hjust = 0.5)) +
labs(x="Països", y="Mean EV", title="Exercici 1: Top 20 països en esperança de vida") +  ylim(70, 82)
ggplot(top_20) + aes(x = reorder(Country, -Promedio), y = Promedio,) + geom_bar(stat = "identity", fill="blue") + theme(axis.text.x=element_text(angle = 45, hjust = 1), plot.title =element_text(hjust = 0.5)) +
labs(x="Països", y="Mean EV", title="Exercici 1: Top 20 països en esperança de vida")
ggplot(top_20) + aes(x = reorder(Country, -Promedio), y = Promedio,) + geom_bar(stat = "identity", fill="blue") + theme(axis.text.x=element_text(angle = 45, hjust = 1), plot.title =element_text(hjust = 0.5)) +
labs(x="Països", y="Mean EV", title="Exercici 1: Top 20 països en esperança de vida") + scale_y_continuous(limits = c(75, 82))
df <- life_expectancy
#Calculem els promitgos de EV per cada pais
promedios <- df %>%
group_by(Country) %>%
summarise(Promedio = mean(Both.sexes, na.rm = TRUE)) #Crea un dataset de un columna (a part de Country) amb els promitgos calculats
#Ordenem els promitgos de més a menys i filtrem perquè només acabin havent 20
top_20 <- promedios %>%
arrange(desc(Promedio)) %>%
head(20)
ggplot(top_20) + aes(x = reorder(Country, -Promedio), y = Promedio,) + geom_bar(stat = "identity", fill="blue") + theme(axis.text.x=element_text(angle = 45, hjust = 1), plot.title =element_text(hjust = 0.5)) +
labs(x="Països", y="Mean EV", title="Exercici 1: Top 20 països en esperança de vida") +  scale_y_continuous(limits = c(min(top_20$Promedio), max(top_20$Promedio)))
#Reorder -> Ordena les barres (si poses - es descendentment)
#Theme -> Canviar les labels del eix x
ggplot(top_20) + aes(x = reorder(Country, -Promedio), y = Promedio,) + geom_bar(stat = "identity", fill="blue") + theme(axis.text.x=element_text(angle = 45, hjust = 1), plot.title =element_text(hjust = 0.5)) +
labs(x="Països", y="Mean EV", title="Exercici 1: Top 20 països en esperança de vida") +  scale_y_continuous(limits = c(min(top_20$Promedio), max(top_20$Promedio)))  coord_flip() +
ggplot(top_20) + aes(x = reorder(Country, -Promedio), y = Promedio,) + geom_col(fill="blue") + theme(axis.text.x=element_text(angle = 45, hjust = 1), plot.title =element_text(hjust = 0.5)) +
labs(x="Països", y="Mean EV", title="Exercici 1: Top 20 països en esperança de vida") +  scale_y_continuous(limits = c(min(top_20$Promedio), max(top_20$Promedio)))
#Reorder -> Ordena les barres (si poses - es descendentment)
ggplot(top_20) + aes(x = reorder(Country, -Promedio), y = Promedio,) + geom_bar(stat = "identity", fill="blue") + theme(axis.text.x=element_text(angle = 45, hjust = 1), plot.title =element_text(hjust = 0.5)) +
labs(x="Països", y="Mean EV", title="Exercici 1: Top 20 països en esperança de vida") +  scale_y(limits = c(min(top_20$Promedio), max(top_20$Promedio)))
ggplot(top_20) + aes(x = reorder(Country, -Promedio), y = Promedio,) + geom_bar(stat = "identity", fill="blue") + theme(axis.text.x=element_text(angle = 45, hjust = 1), plot.title =element_text(hjust = 0.5)) +
labs(x="Països", y="Mean EV", title="Exercici 1: Top 20 països en esperança de vida") +  scale_y_discrete(limits = c(min(top_20$Promedio), max(top_20$Promedio)))
#Reorder -> Ordena les barres (si poses - es descendentment)
#Theme -> Canviar les labels del eix x
df <- life_expectancy
#Calculem els promitgos de EV per cada pais
promedios <- df %>%
group_by(Country) %>%
summarise(Promedio = mean(Both.sexes, na.rm = TRUE)) #Crea un dataset de un columna (a part de Country) amb els promitgos calculats
#Ordenem els promitgos de més a menys i filtrem perquè només acabin havent 20
top_20 <- promedios %>%
arrange(desc(Promedio)) %>%
head(20)
ggplot(top_20) + aes(x = reorder(Country, -Promedio), y = Promedio,) + geom_bar(stat = "identity", fill="blue") + theme(axis.text.x=element_text(angle = 45, hjust = 1), plot.title =element_text(hjust = 0.5)) +
labs(x="Països", y="Mean EV", title="Exercici 1: Top 20 països en esperança de vida") +  scale_y_discrete(limits = (75,82))
ggplot(top_20) + aes(x = reorder(Country, -Promedio), y = Promedio,) + geom_bar(stat = "identity", fill="blue") + theme(axis.text.x=element_text(angle = 45, hjust = 1), plot.title =element_text(hjust = 0.5)) +
labs(x="Països", y="Mean EV", title="Exercici 1: Top 20 països en esperança de vida") +  scale_y_discrete(limits = 75,82)
#Reorder -> Ordena les barres (si poses - es descendentment)
#Theme -> Canviar les labels del eix x
ggplot(top_20) + aes(x = reorder(Country, -Promedio), y = Promedio,) + geom_bar(stat = "identity", fill="blue") + theme(axis.text.x=element_text(angle = 45, hjust = 1), plot.title =element_text(hjust = 0.5)) +
scale_y_discrete(limits = 75,82) +
labs(x="Països", y="Mean EV", title="Exercici 1: Top 20 països en esperança de vida")
ggplot(top_20) + aes(x = reorder(Country, -Promedio), y = Promedio,) + geom_bar(stat = "identity", fill="blue") + theme(axis.text.x=element_text(angle = 45, hjust = 1), plot.title =element_text(hjust = 0.5)) +
scale_y_discrete(limits = 75,82) +
labs(x="Països", y="Mean EV", title="Exercici 1: Top 20 països en esperança de vida")
ggplot(top_20) + aes(x = reorder(Country, -Promedio), y = Promedio,) + geom_bar(stat = "identity", fill="blue") + theme(axis.text.x=element_text(angle = 45, hjust = 1), plot.title =element_text(hjust = 0.5)) +
scale_y_discrete(limits = top_20$Promedio[order(top_20$Promedio)]) +
labs(x="Països", y="Mean EV", title="Exercici 1: Top 20 països en esperança de vida")
ggplot(top_20) + aes(x = reorder(Country, -Promedio), y = Promedio,) + geom_bar(stat = "identity", fill="blue") + theme(axis.text.x=element_text(angle = 45, hjust = 1), plot.title =element_text(hjust = 0.5)) +
scale_y_discrete(limits = 82) +
labs(x="Països", y="Mean EV", title="Exercici 1: Top 20 països en esperança de vida")
ggplot(top_20) + aes(x = reorder(Country, -Promedio), y = Promedio,) + geom_bar(stat = "identity", fill="blue") + theme(axis.text.x=element_text(angle = 45, hjust = 1), plot.title =element_text(hjust = 0.5)) +
labs(x="Països", y="Mean EV", title="Exercici 1: Top 20 països en esperança de vida")
#Reorder -> Ordena les barres (si poses - es descendentment)
#Theme -> Canviar les labels del eix x
df <- life_expectancy
promedios <- df %>%
group_by(Country) %>%
summarise(Promedio = mean(abs(Male - Female), na.rm = TRUE)) #Crea un dataset de un columna (a part de Country) amb els promitgos calculats
promedios
df <- life_expectancy
promedios <- df %>%
group_by(Country) %>%
summarise(Promedio = mean(abs(Male - Female), na.rm = TRUE)) #Crea un dataset de un columna (a part de Country) amb els promitgos calculats
top_20 <- promedios %>%
arrange(desc(Promedio)) %>%
head(20)
ggplot(top_20) + aes(x = reorder(Country, -Promedio), y = Promedio,) + geom_bar(stat = "identity", fill="blue") + theme(axis.text.x=element_text(angle = 45, hjust = 1), plot.title =element_text(hjust = 0.5)) +
labs(x="Països", y="Mean EV", title="Exercici 1: Top 20 països en esperança de vida")
#Reorder -> Ordena les barres (si poses - es descendentment)
#Theme -> Canviar les labels del eix x
ggplot(top_20) + aes(x = reorder(Country, -Promedio), y = Promedio,) + geom_bar(stat = "identity", fill="blue") + theme(axis.text.x=element_text(angle = 90, hjust = 1), plot.title =element_text(hjust = 0.5)) +
labs(x="Països", y="Mean EV", title="Exercici 1: Top 20 països en esperança de vida")
ggplot(top_20) + aes(x = reorder(Country, -Promedio), y = Promedio,) + geom_bar(stat = "identity", fill="blue") + theme(axis.text.x=element_text(angle = 90, hjust = 1), plot.title =element_text(hjust = 0.5)) +
labs(x="Països", y="Mean Diff EV", title="Exercici 1: Top 20 països diferencia EV entre home i dona")
#Reorder -> Ordena les barres (si poses - es descendentment)
#Theme -> Canviar les labels del eix x
ggplot(top_20) + aes(x = reorder(Country, -Promedio), y = Promedio,) + geom_bar(stat = "identity", fill="blue") + theme(axis.text.x=element_text(angle = 70, hjust = 1), plot.title =element_text(hjust = 0.5)) +
labs(x="Països", y="Mean Diff EV", title="Exercici 1: Top 20 països diferencia EV entre home i dona")
#Reorder -> Ordena les barres (si poses - es descendentment)
#Theme -> Canviar les labels del eix x
ggplot(top_20) + aes(x = reorder(Country, -Promedio), y = Promedio,) + geom_bar(stat = "identity", fill="blue") + theme(axis.text.x=element_text(angle = 70, hjust = 1), plot.title =element_text(hjust = 0.5)) +
labs(x="Països", y="Mean Diff EV", title="Exercici 1: Top 20 països diferència EV entre home i dona")
#Reorder -> Ordena les barres (si poses - es descendentment)
#Theme -> Canviar les labels del eix x
df <- life_expectancy
ggplot(df) + aes(x = Year, y = Both.sexes) + geom_point()
ggplot(df) + aes(x = Year, y = Both.sexes) + geom_line()
ggplot(df) + aes(x = Year, y = Both.sexes, group= Country) + geom_line()
ggplot(df) + aes(x = Year, y = Both.sexes, group= Country) + geom_line() + scale_color_discrete(name = "País")
ggplot(df) + aes(x = Year, y = Both.sexes, group= Country, color = Country) + geom_line() + scale_color_discrete(name = "País")
ggplot(df) + aes(x = Year, y = Both.sexes, group= Country, linetype = Country) + geom_line() + scale_color_discrete(name = "País")
ggplot(df) + aes(x = Year, y = Both.sexes, group= Country, linetype = Country) + geom_line() +scale_linetype_discrete(name = "País")
ggplot(df) + aes(x = Year, y = Both.sexes, group= Country, color = Country) + geom_line() +  scale_color_brewer(palette="Dark2")
ggplot(df) + aes(x = Year, y = Both.sexes, group= Country, color = Country) + geom_line() + scale_color_manual(values=c("#999999", "#E69F00", "#56B4E9"))
library(ggiraph)
install.packages("ggiraph")
library(ggiraph)
ggplot(df, aes(x = Year, y = Both.sexes, group = Country, color = Country)) +
geom_line_interactive(aes(tooltip = Country)) +
theme_minimal()
ggplot(df, aes(x = Year, y = Both.sexes, group = Country)) +
geom_line_interactive(aes(tooltip = Country)) +
theme_minimal()
df <- life_expectancy
ggplot(df, aes(x = Year, y = Both.sexes, group = Country)) +
geom_line_interactive(aes(tooltip = Country)) +
theme_minimal()
ggobj <- ggplot(df, aes(x = Year, y = Both.sexes, group = Country, color = Country)) +
geom_line_interactive(aes(tooltip = Country)) +
theme_minimal()
girafe(ggobj)
library(dplyr)
library(ggplot2)
library(ggiraph)
df <- life_expectancy
ggobj <- ggplot(df, aes(x = Year, y = Both.sexes, group = Country, color = Country)) +
geom_line_interactive(aes(tooltip = Country)) +
theme_minimal()
girafe(ggobj)
df <- life_expectancy
ggobj <- ggplot(df, aes(x = Year, y = Both.sexes, group = Country, color = Country)) +
geom_line_interactive(aes(tooltip = Country)) +
theme_minimal()
girafe(ggobj)
ggobj <- ggplot(df, aes(x = Year, y = Both.sexes, group = Country)) +
geom_line_interactive(aes(tooltip = Country)) +
theme_minimal()
girafe(ggobj)
library(dplyr)
library(ggplot2)
library(ggiraph)
df <- life_expectancy
ggobj <- ggplot(df, aes(x = Year, y = Both.sexes, group = Country)) +
geom_line_interactive(aes(tooltip = Country)) +
theme_minimal()
girafe(ggobj)
library(dplyr)
library(ggplot2)
library(ggiraph)
df <- life_expectancy
ggobj <- ggplot(df, aes(x = Year, y = Both.sexes, group = Country)) +
geom_line_interactive(aes(tooltip = Country)) +
theme_minimal()
girafe(ggobj)
df <- life_expectancy
ggplot(df, aes(x = Year, y = Both.sexes, group = Country)) +
geom_line_interactive(aes(tooltip = Country)) +
theme_minimal()
df <- life_expectancy
ggplot(df, aes(x = Year, y = Both.sexes, group = Country)) +
geom_line(aes(tooltip = Country)) +
theme_minimal()
df <- life_expectancy
ggplot(df, aes(x = Year, y = Both.sexes, group = Country)) +
geom_line() +
theme_minimal()
df <- life_expectancy
ggplot(df, aes(x = Year, y = Both.sexes, group = Country)) + geom_line()
library(dplyr)
library(ggplot2)
df <- life_expectancy
# Supongamos que 'df' contiene los datos de esperanza de vida
ggobj <- ggplot(df, aes(x = Year, y = Both.sexes, group = Country, color = Country)) +
geom_line() +
geom_text(aes(label = Country), hjust = 0, vjust = 0) +  # Agrega etiquetas
theme_minimal()
# Muestra el gráfico interactivo
girafe(ggobj)
df <- life_expectancy
# Supongamos que 'df' contiene los datos de esperanza de vida
ggplot(df, aes(x = Year, y = Both.sexes, group = Country, color = Country)) +
geom_line() +
geom_text(aes(label = Country), hjust = 0, vjust = 0) +  # Agrega etiquetas
theme_minimal()
# Supongamos que 'df' contiene los datos de esperanza de vida
ggplot(df, aes(x = Year, y = Both.sexes, group = Country)) +
geom_line() +
geom_text(aes(label = Country), hjust = 0, vjust = 0) +  # Agrega etiquetas
theme_minimal()
df <- life_expectancy
ggobj <- ggplot(df, aes(x = Year, y = Both.sexes, group = Country)) + geom_line()
library(dplyr)
library(ggplot2)
df <- life_expectancy
ggplot(df, aes(x = Year, y = Both.sexes, group = Country)) + geom_line()
ggplot(df, aes(x = Year, y = Both.sexes, z=Country group = Country)) + geom_line()
df <- life_expectancy
ggplot(df, aes(x = Year, y = Both.sexes, z= Country, group = Country)) + geom_line()
ggplot(df, aes(x = Year, y = Both.sexes, group = Country)) + geom_line()
library(blogdown)
new_site()
clear
library(tidyverse)
library(dplyr)
library(readr)
path <- "C:/Users/garci/Desktop/UNIVERSITAT/QUART DE CARRERA/REALITAT AUGMENTADA/ABP/Sistema-Solar/codi/data"
setwd(path)
satellites <- read.csv("original_satellites.csv")
planets <- read.csv("planets.csv")
# Distancias de los satélites en millones de km (10^6 km)
distancias <- c(
0.384, 0.0094, 0.0235, 0.4217, 0.671, 1.070, 1.883, 0.1814, 11.46, 11.70,
24.18, 23.20, 11.66, 22.79, 21.30, 11.70, 0.223, 0.129, 0.128, 24.06, 17.26,
24.96, 23.74, 21.30, 22.07, 22.69, 22.03, 22.56, 23.46, 24.53, 26.03, 26.45,
28.34, 28.17, 28.30, 28.86, 29.22, 29.96, 31.85, 34.88, 39.24, 43.96, 44.76,
45.91, 48.74, 48.23, 48.79, 49.50, 49.70, 50.01, 29.95, 29.68, 29.93, 30.10,
29.70, 29.60, 29.50, 29.40, 29.30, 29.20, 29.10, 28.90, 28.80, 28.60, 28.50,
28.40, 27.90, 27.80, 27.60, 27.50, 0.185, 0.238, 0.294, 0.377, 0.527, 1.222,
0.585, 3.560, 12.88, 0.151, 0.151, 0.018, 0.025, 0.030, 0.137, 0.138, 0.141,
0.134, 0.071, 0.121, 0.092, 0.042, 0.066, 0.015, 23.57, 22.82, 22.96, 22.30,
23.10, 22.50, 23.10, 23.80, 23.50, 24.00, 24.60, 24.80, 24.90, 24.50, 25.00,
25.20, 25.30, 25.60, 25.80, 26.00, 26.10, 26.50, 26.60, 26.90, 27.20, 27.40,
27.60, 27.80, 28.10, 28.20, 28.30, 28.50, 28.70, 29.00, 29.20, 29.40, 29.60,
0.191, 0.271, 0.436, 0.583, 0.129, 0.048, 0.057, 0.061, 0.060, 0.060, 0.062,
0.070, 0.072, 0.074, 0.057, 0.118, 0.179, 0.225, 0.238, 0.254, 0.285, 0.290,
0.308, 0.337, 0.371, 0.076, 0.090, 0.354, 5.513, 0.030, 0.050, 0.060, 0.070,
0.085, 0.118, 5.331, 5.828, 23.54, 23.56, 48.17, 0.105)
satellites['Distance_to_planet (10^6km)'] = distancias
gm_numeric <- as.numeric(gsub("±.*", "", satellites[['gm']]))
radius_numeric <- as.numeric(gsub("±.*", "", satellites[['radius']]))
satellites['radius'] = radius_numeric
satellites['Velocity (km/s)'] = (sqrt(gm_numeric / satellites['Distance (m)']))/1000
library(tidyverse)
library(dplyr)
library(readr)
path <- "C:/Users/garci/Desktop/UNIVERSITAT/QUART DE CARRERA/REALITAT AUGMENTADA/ABP/Sistema-Solar/codi/data"
setwd(path)
satellites <- read.csv("original_satellites.csv")
planets <- read.csv("planets.csv")
# Distancias de los satélites en millones de km (10^6 km)
distancias <- c(
0.384, 0.0094, 0.0235, 0.4217, 0.671, 1.070, 1.883, 0.1814, 11.46, 11.70,
24.18, 23.20, 11.66, 22.79, 21.30, 11.70, 0.223, 0.129, 0.128, 24.06, 17.26,
24.96, 23.74, 21.30, 22.07, 22.69, 22.03, 22.56, 23.46, 24.53, 26.03, 26.45,
28.34, 28.17, 28.30, 28.86, 29.22, 29.96, 31.85, 34.88, 39.24, 43.96, 44.76,
45.91, 48.74, 48.23, 48.79, 49.50, 49.70, 50.01, 29.95, 29.68, 29.93, 30.10,
29.70, 29.60, 29.50, 29.40, 29.30, 29.20, 29.10, 28.90, 28.80, 28.60, 28.50,
28.40, 27.90, 27.80, 27.60, 27.50, 0.185, 0.238, 0.294, 0.377, 0.527, 1.222,
0.585, 3.560, 12.88, 0.151, 0.151, 0.018, 0.025, 0.030, 0.137, 0.138, 0.141,
0.134, 0.071, 0.121, 0.092, 0.042, 0.066, 0.015, 23.57, 22.82, 22.96, 22.30,
23.10, 22.50, 23.10, 23.80, 23.50, 24.00, 24.60, 24.80, 24.90, 24.50, 25.00,
25.20, 25.30, 25.60, 25.80, 26.00, 26.10, 26.50, 26.60, 26.90, 27.20, 27.40,
27.60, 27.80, 28.10, 28.20, 28.30, 28.50, 28.70, 29.00, 29.20, 29.40, 29.60,
0.191, 0.271, 0.436, 0.583, 0.129, 0.048, 0.057, 0.061, 0.060, 0.060, 0.062,
0.070, 0.072, 0.074, 0.057, 0.118, 0.179, 0.225, 0.238, 0.254, 0.285, 0.290,
0.308, 0.337, 0.371, 0.076, 0.090, 0.354, 5.513, 0.030, 0.050, 0.060, 0.070,
0.085, 0.118, 5.331, 5.828, 23.54, 23.56, 48.17, 0.105)
satellites['Distance_to_planet (10^6km)'] = distancias
gm_numeric <- as.numeric(gsub("±.*", "", satellites[['gm']]))
radius_numeric <- as.numeric(gsub("±.*", "", satellites[['radius']]))
satellites['radius'] = radius_numeric
satellites['Velocity (km/s)'] = (sqrt(gm_numeric / (satellites['Distance_to_planet (10^6km)']*1000000)))
write.csv(satellites, "satellites.csv", row.names = FALSE)
# Imprimir las distancias
view(satellites)
